"use strict";var precacheConfig=[["/spark-app/index.html","9831feb4284b864f6e41f9b52d4e246b"],["/spark-app/static/css/main.65027555.css","41e5e45b9b5d9ecaa09b72c11eed3386"],["/spark-app/static/js/main.2ee01765.js","568bac3e14ad07f26149425debc8cb48"],["/spark-app/static/media/1_1-2.fc1fd74e.JPG","fc1fd74e6b2f416f15a3fb763066fc02"],["/spark-app/static/media/1_1-3.60ea4e8c.JPG","60ea4e8c5482a35ff9b5fcbbe58b79a1"],["/spark-app/static/media/2_2-1.bd266ce4.JPG","bd266ce47673921e511c7eee42b6a9cd"],["/spark-app/static/media/2_2-2.d3a3cccd.JPG","d3a3cccda4ff2cf9b3111da7b61d7b40"],["/spark-app/static/media/2_2-3.b56cb350.JPG","b56cb3505d1b341678568461cddcc573"],["/spark-app/static/media/2_2-4.ef1ff428.JPG","ef1ff428629826627d312f3d0764e1c9"],["/spark-app/static/media/3_3-1.a508d5f2.JPG","a508d5f22b4a2248b513bf0fef0ed7ed"],["/spark-app/static/media/3_3-2.46fa4698.JPG","46fa469833033b56188ead55f2700d39"],["/spark-app/static/media/3_3-3.3943a1d4.JPG","3943a1d48c5e9e7704bcd39bba813b64"],["/spark-app/static/media/3_3-4.09557acf.JPG","09557acfe32b968aca53daf3ff443762"],["/spark-app/static/media/4_4-1.ebf4a4e1.JPG","ebf4a4e1b318d95cf6a89d7b5fbae504"],["/spark-app/static/media/4_4-2.bf5a63d1.JPG","bf5a63d1b8bd74dfcb8ad75d6aa4c7d4"],["/spark-app/static/media/4_4-3.bb03a563.JPG","bb03a5634ad1bcaa4dd7c20f1850948f"],["/spark-app/static/media/4_4-4.b5367876.JPG","b5367876df1aa73f1dbd0c2e2ee74e57"],["/spark-app/static/media/5_5-1.ca8ba3d7.JPG","ca8ba3d7f5bf63963e2e2fcc560a04fe"],["/spark-app/static/media/5_5-2.68d1e750.JPG","68d1e75066d4c1e538e25cda86b09040"],["/spark-app/static/media/5_5-3.e5552b76.JPG","e5552b7603eb68ac9126f6d031d5138c"],["/spark-app/static/media/5_5-4.e58bfad1.JPG","e58bfad1a40238b7111aa30e99f8ac25"],["/spark-app/static/media/6_6-1.935a0484.JPG","935a04840dd406b0458c60072928af95"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],r=new URL(a,self.location),n=createCacheKey(r,hashParamName,t,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(r){return setOfCachedUrls(r).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return r.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),r="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,r),e=urlsToCacheKeys.has(t));var n="/spark-app/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});